name: Generation APK

env:
  main_project_module: app

on:
  push:
    branches:
      - master
  workflow_dispatch:

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set current date as env variable
        run: echo "date_today=$(date +'%Y-%m-%d')" >> $GITHUB_ENV

      - name: Set repository name as env variable
        run: echo "repository_name=$(echo '${{ github.repository }}' | awk -F '/' '{print $2}')" >> $GITHUB_ENV

      - name: Set Up JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '17'
          cache: 'gradle'
          cache-dependency-path: | # optional
            sub-project/*.gradle*
            sub-project/app/build/
            sub-project/**/gradle-wrapper.properties

      - name: Change wrapper permissions
        run: chmod +x ./gradlew

      - name: Decode and restore journal_key.jks
        run: |
          mkdir -p ${{ github.workspace }}/app
          printf "%s" "${{ secrets.JKS_BASE64 }}" | base64 --decode > ${{ github.workspace }}/app/journal_key.jks
          ls -l ${{ github.workspace }}/app/journal_key.jks

      - name: Set up signing environment variables
        run: |
          echo "KEYSTORE_PATH=${{ github.workspace }}/app/journal_key.jks" >> $GITHUB_ENV
          echo "KEYSTORE_ALIAS=${{ secrets.KEYSTORE_ALIAS }}" >> $GITHUB_ENV
          echo "KEYSTORE_PASSWORD=${{ secrets.KEYSTORE_PASSWORD }}" >> $GITHUB_ENV
          echo "KEY_PASSWORD=${{ secrets.KEY_PASSWORD }}" >> $GITHUB_ENV


      # Create APK Release
      - name: Build apk release project (APK)
        run: ./gradlew assembleRelease

      - name: Generate release version
        id: version
        run: |
          ./gradlew generateVersions
          echo "RELEASE_NAME=$(sed '1!d' ./version.txt)" >> $GITHUB_OUTPUT
          echo "RELEASE_CODE=$(sed '2!d' ./version.txt)" >> $GITHUB_OUTPUT

      # Noted For Output [main_project_module]/build/outputs/apk/release/
      - name: Upload APK Release
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.date_today }} - ${{ env.repository_name }}
          path: ${{ env.main_project_module }}/build/outputs/apk/release/

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.version.outputs.RELEASE_CODE }}
          release_name: Release v${{ steps.version.outputs.RELEASE_NAME }}
          body_path: RELEASE.md
          draft: false
          prerelease: false

      - name: Upload Release APK
        id: upload_release_apk
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ env.main_project_module }}/build/outputs/apk/release/app-release.apk
          asset_name: JournalTracker.apk
          asset_content_type: application/zip

      - name: Upload Release Meta
        id: upload_release_meta
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ env.main_project_module }}/build/outputs/apk/release/output-metadata.json
          asset_name: output-metadata.json
          asset_content_type: application/json